// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
// USER
model user {
  id       String    @id
  session session[]
  password_hash String?
  username String? @unique
  email    String?    @unique
  mobile   String?
  email_verified Boolean @default(false)
  auth_method String?
  name String?
  given_name String?
  family_name String?
  picture String?
  email_verification_token email_verification_code[]
  password_reset_token password_reset_token[]
  failed_attempts Int       @default(0)
  account_locked  Boolean   @default(false)
}

model email_verification_code{
  id String @id 
  userId String
  user user @relation(fields: [userId], references: [id], onDelete: Cascade)
  email String
  code String
  expiresAt DateTime
  ipAddress String
  createdAt DateTime @default(now())
  @@index([userId, createdAt])
  @@index([ipAddress, createdAt])
}

model password_reset_token{
  id String @id
  token_hash String @unique
  userId String
  user user @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  ipAddress String
  createdAt DateTime @default(now())
  @@index([userId, createdAt])
  @@index([ipAddress, createdAt])

}

//SESSION
model session {
  id        String   @id
  userId   String
  user      user     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt DateTime
}

// Ads category
model category {
  id               Int           @id @default(autoincrement())
  name             String
  uiLabel          String
  slug             String        @unique
  href             String
  title            String
  metaTitle        String
  metaDescription  String
  description      String?
  subCategories    sub_category[]
}

model sub_category {
  id         Int      @id @default(autoincrement())
  url        String
  title      String
  category   category @relation(fields: [categoryId], references: [id])
  categoryId Int
}